server:
  port: 8083
spring:
  main:
    web-application-type: reactive
  application:
    name: oauth2-service
  cloud:
    discovery:
      enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: admin
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          secret-key: changeMeChangeMeChangeMeChangeMe123
      #        jwk-set-uri: http://auth-service:8081/.well-known/jwks.json
      client:
        registration:
          google:
            client-id: 99125590092-f7c91gdsgs5mihdp7jaghch4nhfkv4fm.apps.googleusercontent.com
            client-secret: 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
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id: Ov23liz1KJpTlFVk1QdX
            client-secret: 2f8a02d7805716321609b123623ebb8c9b526221

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

app:
  jwt:
    secret: changeMeChangeMeChangeMeChangeMe123
    expirySeconds: 30 * 24 * 60 * 60 # 30 days

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    enabled: true
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
    doc-expansion: none